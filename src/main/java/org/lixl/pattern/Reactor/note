

MyReactor 和 MyHandler 是一个单线程Reactor
    单线程模式缺点：当某个handler阻塞时，会导致其他所有的client的handler都得不到执行，并且更严重的是,handler的阻塞也会导致整个服务不能接收新的client请求（因为acceptor也被阻塞了）
    因此，单线程模型仅适用于handler中业务处理组件能快速完成的场景

多线程Reactor
    将Handler处理器的执行放入线程池，多线程进行业务处理
    对Reactor而言，可以仍是单个线程。

    优点：响应快，不必为单个同步时间所阻塞
        编程简单，可避免复杂的多线程同步问题，避免多线程切换开销
        可扩展，可以通过增加Reactor实例个数来利用CPU资源
        可复用，reactor框架本身与具体事件处理逻辑无关，具有很高的复用性。
    缺点：相比传统简单模型，有一定复杂性
        需底层Synchronous Event Demultiplexer支持，比如Java的Selector支持
        IO读写数据时还是在同一个线程中实现，即使使用多个Reactor机制下，那些共享一个Reactor的Channel如果出现一个长时间的数据读写，会影响此Reactor中其他Channel的响应时间
