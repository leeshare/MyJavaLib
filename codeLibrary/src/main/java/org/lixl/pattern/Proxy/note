
//2019-11-11
//代理模式
    在不改变源码的情况下，实现对目标对象的功能扩展。

    比如本例，有个歌手叫 Singer，有个唱歌方法叫 sing()
    你希望 歌手在唱歌前后还要说点什么，即对目标对象Singer的sing()方法进行功能扩展。


other = {
    delegate  一个团体中选出的 代表
        类似函数指针等

    proxy 多指某个人的 代表/代理，代你参加会议/投票
        具体模式：代理模式

    agent 代理人/经纪人
        大的架构 采用代理
}

    代理分为：
        静态代理（这里的 SingerProxy）
            依赖于目标类实现的接口
        动态代理(JDK代理)
            依赖于目标类实现的接口
        Cglib代理
            目标类可以没有接口

        总结：对于Spring的AOP编程中，如果加入容器的目标对象有实现接口，则使用JDK代理；如果目标对象没有实现接口，则使用Cglib代理。
